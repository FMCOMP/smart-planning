# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
    before_all do
        ENV["BUILD_TYPE"] = ""
        ENV["BUILD_PROP_FILE"] = ""
    end

    desc "Deploy a new testing version to HockeyApp"
    lane:stage do
        gradle(task: "assemble", properties: gradle_properties)

        # build the release variant
        build_android_app(task: "assembleRelease")

        # upload to HockeyApp
        hockey( api_token: "YOUR_API_TOKEN" )

        slack(
          slack_url: "https://hooks.slack.com/services/IDS"
        )
    end

    desc "Deploy a new Google Play Store"
    lane:beta do
      # build the release variant

      # upload to Google Play
      supply(track: "beta")

      upload_to_play_store(track: 'beta')
      slack(message: 'Successfully distributed a new beta build')
    end

    desc "Release Application to App Store"
    lane:release do
        supply(apk_paths: ["app/build/outputs/apk/app-release.apk"])
    end

    desc "Build Application"
    lane:build do
        gradle(task: "assemble", build_type: "", properties: gradle_properties)
    end

    desc "Upload signed application release"
    lane:archive do

    end

    desc "Sign Application"
    lane:sign do

    end

    desc "Upload Application Source COde"
    lane:upload do
        create_pull_request(
            head: "development",
            base: "deployment",
            api_token: ENV["GITHUB_TOKEN"],
            repo: "FMCOMP/smart-planning",
            title: "Amazing new feature",
            body: "Ready for Q&A Testing",
            api_url: "https://github.com/FMCOMP/smart-planning/wiki"
        )
    end

    desc "Deploy App to Google Play"
    lane:playstore do
        upload_to_play_store # Uploads the APK built in the gradle step above

        # Generate the changelog based on commit messages since your last tag
        changelog_from_git_commits

    end

    lane:bump_version_code do
        path = '../android/app/build.gradle'
        re = /versionCode\s+(\d+)/

        s = File.read(path)
        versionCode = s[re, 1].to_i
        s[re, 1] = (versionCode + 1).to_s

        f = File.new(path, 'w')
        f.write(s)
        f.close
    end
end
