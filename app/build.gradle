apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'fsmmmjpuber'
            keyPassword 'abc123'
            storeFile file('/Users/troger56/Documents/GitHub/android-native-ui-refactored/app/android')
            storePassword 'abc123'
        }
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "mmjp.fsm.ford.com.mmjp"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        // Enabling multidex support.
        multiDexEnabled true
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    buildToolsVersion '27.0.3'
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

ext.supportLibVersion = '26.1.0'
ext.retrofitVersion = '2.2.0'
ext.okHttpVersion = '3.6.0'
ext.daggerVersion = '2.10'

dependencies {
    implementation(name: 'HERE-sdk', ext: 'aar')
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.lyft:lyft-android-sdk:1.0.3'
    implementation 'com.uber.sdk:rides-android:0.5.3'
    implementation 'com.android.support:multidex:1.0.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:support-vector-drawable:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation 'com.mindscapehq.android:raygun4android:3.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

/**
 * Loads property from gradle.properties and ~/.gradle/gradle.properties
 * Use to look up confidential information like keys that shoudln't be stored publicly
 * @param name to lookup
 * @return the value of the property or "MISSING"
 */
def loadSecret(String name) {
    return hasProperty(name) ? getProperty(name) : "MISSING"
}
