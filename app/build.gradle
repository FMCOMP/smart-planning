buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    flatDir { dirs "libs" }
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 27
    flavorDimensions 'stage'
    buildToolsVersion '27.0.3'
    signingConfigs {
        googleBeta {
            storeFile file('google-android-beta.keystore')
            storePassword 'googleBetaKey'
            keyAlias 'google_beta_app_key'
            keyPassword 'googleBetaKey'
        }
        googleRelease {
            storeFile file('google-android-release.keystore')
            storePassword 'googleReleaseKey'
            keyAlias 'google_release_app_key'
            keyPassword 'googleReleaseKey'
        }
        hockeyAndroidApp {
            keyAlias 'hockey_android_key'
            keyPassword 'hockeyAppStageKey'
            storePassword 'hockeyAppStageKey'
            storeFile file('/Users/troger56/Documents/GitHub/smart-planning/config/keys/hockey_app_stage')
        }
    }
    defaultConfig {
        versionCode 1
        minSdkVersion 19
        targetSdkVersion 27
        versionName 'v0.0.1'
        multiDexEnabled true
        applicationId "mmjp.fsm.ford.com"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        stage {
            debuggable true
            minifyEnabled true
            zipAlignEnabled false
            versionNameSuffix '-stage'
            applicationIdSuffix '.stage'
            signingConfig signingConfigs.hockeyAndroidApp
            manifestPlaceholders = [HOCKEYAPP_APP_ID: "02b38e9789ac4a4aa211340e9bcb00b9"]
        }
        beta {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            versionNameSuffix '-beta'
            applicationIdSuffix ".beta"
            signingConfig signingConfigs.googleBeta
        }
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled false
            versionNameSuffix '-release'
            applicationIdSuffix ".release"
            signingConfig signingConfigs.googleRelease
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

ext.supportLibVersion = "27.1.1"
ext.retrofitVersion = "2.2.0"
ext.okHttpVersion = "3.6.0"
ext.daggerVersion = "2.10"

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // TestFairy SDK
    implementation 'testfairy:testfairy-android-sdk:1.+@aar'

    // Fabric: Crashlytics Kit
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.2@aar') {
        transitive = true
    }

    // HockeyApp SDK
    implementation 'net.hockeyapp.android:HockeySDK:5.1.0'

    // HereMaps SDK
    implementation(name: "HERE-sdk", ext: "aar")

    // Uber SDK
    implementation 'com.uber.sdk:rides-android:0.5.3'

    // Lyft SDK
    implementation 'com.lyft:lyft-android-sdk:1.0.3'

    // Android SDK
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:support-vector-drawable:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation 'com.android.support:multidex:1.0.3'

    // Android Testing SDK
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // RestAPI SDK
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // App Tools SDK
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.mindscapehq.android:raygun4android:3.0.0'
    annotationProcessor "com.jakewharton:butterknife-compiler:8.8.1"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
}

/**
 * Loads property from gradle.properties and ~/.gradle/gradle.properties
 * Use to look up confidential information like keys that shoudln"t be stored publicly
 * @param name to lookup
 * @return the value of the property or "MISSING"
 */
def loadSecret(String name) {
    return hasProperty(name) ? getProperty(name) : "MISSING"
}
